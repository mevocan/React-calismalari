{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mevlu\\\\Desktop\\\\memory-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { useEffect } from 'react';\nimport MemoryCard from './components/MemoryCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardList = [{\n  \"path\": \"/img/1.jpeg\"\n}, {\n  \"path\": \"/img/2.jpeg\"\n}, {\n  \"path\": \"/img/3.jpeg\"\n}, {\n  \"path\": \"/img/4.jpeg\"\n}, {\n  \"path\": \"/img/5.jpeg\"\n}, {\n  \"path\": \"/img/6.jpeg\"\n}, {\n  \"path\": \"/img/7.jpeg\"\n}, {\n  \"path\": \"/img/8.jpeg\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const prepareCards = () => {\n    const sortedCards = [...cardList, ...cardList].sort(() => 0.5 - Math.random()).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(sortedCards);\n  };\n  useEffect(() => {\n    prepareCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Oyunu Ba\\u015Flat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(MemoryCard, {\n        card: card\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mrCWdHvCaUiuDWPDa/9VjhNDyNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","MemoryCard","jsxDEV","_jsxDEV","cardList","App","_s","cards","setCards","prepareCards","sortedCards","sort","Math","random","map","card","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mevlu/Desktop/memory-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport { useEffect } from 'react';\nimport MemoryCard from './components/MemoryCard';\n\nconst cardList = [\n      {\"path\":\"/img/1.jpeg\"},\n      {\"path\":\"/img/2.jpeg\"},\n      {\"path\":\"/img/3.jpeg\"},\n      {\"path\":\"/img/4.jpeg\"},\n      {\"path\":\"/img/5.jpeg\"},\n      {\"path\":\"/img/6.jpeg\"},\n      {\"path\":\"/img/7.jpeg\"},\n      {\"path\":\"/img/8.jpeg\"}\n    ]\n\nfunction App() {\n  const [cards,setCards] = useState([]);\n\n  const prepareCards = ()=>{\n\n    const sortedCards =[...cardList,...cardList]\n    .sort(()=>0.5-Math.random())\n    .map((card)=> ({ ...card, id: Math.random() }))\n\n    setCards(sortedCards)\n  }\n    \n  useEffect(()=>{\n    prepareCards()\n  },[])\n\n  return (\n    <div className=\"container\">\n      <h1>Memory App</h1>\n      <button>Oyunu Ba≈ülat</button>\n      <div className=\"card-grid\">\n        {\n           cards.map(card => (\n              <MemoryCard card={card} key={card.id}/>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAG,CACX;EAAC,MAAM,EAAC;AAAa,CAAC,EACtB;EAAC,MAAM,EAAC;AAAa,CAAC,EACtB;EAAC,MAAM,EAAC;AAAa,CAAC,EACtB;EAAC,MAAM,EAAC;AAAa,CAAC,EACtB;EAAC,MAAM,EAAC;AAAa,CAAC,EACtB;EAAC,MAAM,EAAC;AAAa,CAAC,EACtB;EAAC,MAAM,EAAC;AAAa,CAAC,EACtB;EAAC,MAAM,EAAC;AAAa,CAAC,CACvB;AAEL,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAMU,YAAY,GAAGA,CAAA,KAAI;IAEvB,MAAMC,WAAW,GAAE,CAAC,GAAGN,QAAQ,EAAC,GAAGA,QAAQ,CAAC,CAC3CO,IAAI,CAAC,MAAI,GAAG,GAACC,IAAI,CAACC,MAAM,EAAE,CAAC,CAC3BC,GAAG,CAAEC,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC,MAAM;IAAG,CAAC,CAAC,CAAC;IAE/CL,QAAQ,CAACE,WAAW,CAAC;EACvB,CAAC;EAEDV,SAAS,CAAC,MAAI;IACZS,YAAY,EAAE;EAChB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEN,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnBnB,OAAA;MAAAe,QAAA,EAAQ;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC7BnB,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAC,QAAA,EAErBX,KAAK,CAACO,GAAG,CAACC,IAAI,iBACXZ,OAAA,CAACF,UAAU;QAACc,IAAI,EAAEA;MAAK,GAAMA,IAAI,CAACC,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAChB,EAAA,CA7BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}