{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mevlu\\\\Desktop\\\\memory-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport MemoryCard from './components/MemoryCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardList = [{\n  \"path\": \"/img/1.jpeg\"\n}, {\n  \"path\": \"/img/2.jpeg\"\n}, {\n  \"path\": \"/img/3.jpeg\"\n}, {\n  \"path\": \"/img/4.jpeg\"\n}, {\n  \"path\": \"/img/5.jpeg\"\n}, {\n  \"path\": \"/img/6.jpeg\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [selectedOne, setSelectedOne] = useState(null);\n  const [selectedTwo, setSelectedTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const prepareCards = () => {\n    const sortedCards = [...cardList, ...cardList].sort(() => 0.5 - Math.random()).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(sortedCards);\n    setSelectedOne(null);\n    setSelectedTwo(null);\n  };\n  const handleSelected = card => {\n    selectedOne ? setSelectedTwo(card) : setSelectedOne(card);\n  };\n  useEffect(() => {\n    prepareCards();\n  }, []);\n  useEffect(() => {\n    if (selectedOne && selectedTwo) {\n      setDisabled(true);\n      if (selectedOne.path === selectedTwo.path) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.path === selectedOne.path) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetState();\n      } else {\n        setTimeout(() => {\n          resetState();\n        }, 1000);\n      }\n    }\n  }, [selectedOne, selectedTwo]);\n  const resetState = () => {\n    setSelectedOne(null);\n    setSelectedTwo(null);\n    setDisabled(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prepareCards,\n      children: \"Oyunu Ba\\u015Flat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(MemoryCard, {\n        card: card,\n        handleSelected: handleSelected,\n        disabled: disabled,\n        rotated: card === selectedOne || card === selectedTwo || card.matched\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y81cgZe6jirZMLQbusqW6LgMA74=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","MemoryCard","jsxDEV","_jsxDEV","cardList","App","_s","cards","setCards","selectedOne","setSelectedOne","selectedTwo","setSelectedTwo","disabled","setDisabled","prepareCards","sortedCards","sort","Math","random","map","card","id","handleSelected","path","prevCards","matched","resetState","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rotated","_c","$RefreshReg$"],"sources":["C:/Users/mevlu/Desktop/memory-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport MemoryCard from './components/MemoryCard';\n\nconst cardList = [\n  { \"path\": \"/img/1.jpeg\" },\n  { \"path\": \"/img/2.jpeg\" },\n  { \"path\": \"/img/3.jpeg\" },\n  { \"path\": \"/img/4.jpeg\" },\n  { \"path\": \"/img/5.jpeg\" },\n  { \"path\": \"/img/6.jpeg\" }\n];\n\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [selectedOne,setSelectedOne] = useState(null)\n  const [selectedTwo,setSelectedTwo] = useState(null)\n  const [disabled,setDisabled] = useState(false)\n\n  const prepareCards = () => {\n\n    const sortedCards = [...cardList, ...cardList]\n      .sort(() => 0.5 - Math.random())\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setCards(sortedCards);\n    setSelectedOne(null)\n    setSelectedTwo(null)\n  }\n\n  const handleSelected = (card) =>{\n    selectedOne ? setSelectedTwo(card) :setSelectedOne(card)\n  }\n\n  useEffect(() => {\n    prepareCards();\n  }, []);\n\n  useEffect(()=>{\n    if(selectedOne && selectedTwo ){\n      setDisabled(true)\n      if(selectedOne.path === selectedTwo.path){\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if(card.path === selectedOne.path) {\n              return { ...card, matched: true }\n            } else {\n              return card;\n            }\n          })\n        })\n        resetState();\n      }else {\n        setTimeout(() => {\n          resetState();\n        }, 1000);}\n\n    }\n  },[selectedOne,selectedTwo])\n\n  const resetState = () => {\n    setSelectedOne(null);\n    setSelectedTwo(null);\n    setDisabled(false);\n  }\n\n\n  return (\n    <div className=\"container\">\n      <h1>Memory App</h1>\n      <button onClick={prepareCards}>Oyunu Ba≈ülat</button>\n\n      <div className=\"card-grid\">\n        {\n          cards.map(card => (\n            <MemoryCard card={card} key={card.id} handleSelected={handleSelected} disabled={disabled} rotated={card === selectedOne || card === selectedTwo || card.matched}/>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}